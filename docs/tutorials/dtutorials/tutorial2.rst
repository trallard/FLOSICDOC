
########################################################################
Tutorial 2: a FLOSIC calculation for H2
########################################################################

In this tutorial we will learn to do a simple FLOSIC calculation with an H2 molecule.
As a reminder, the **CLUSTER** file is the main input file of FLOSIC. It contains 
the minimal information to set up the calculation. See below the CLUSTER file for the hydrogen molecule.

.. literalinclude:: input_data/CLUSTER.H2

We will now describe the input structure of this file.
The first line is **GGA-PBE*GGA-PBE**. It specifies that the electron-electron exchange and correlation interactions in the 
systems are modeled within the generalized gradient approximation (GGA) using the Perdew-Burke-Ernzerhof 
(PBE) parametrization. This is the default functional used in FLOSIC. A few other functionals are also 
available.  

The second line is **NONE**. It refers to point group symmetry. NONE means that there is no symmetry.
To use symmetry point groups from a GRPPMAT file, replace this with **GRP**. A few selected symmetry groups such as Ih, Td, Th, C3V 
etc. can also be provided here. In this case the GRPMAT corresponding to specified point group will be 
automatically generated by NRLMOL. Even though the H2 molecule possesses symmetry we will perform the
calculation without symmetry, so keep the **NONE** line as it is. A GRPMAT file will be created automatically and will contain the 
identity matrix only.

The third line specifies the number of inequivalent atoms in calculations. Since we are not making use of point group 
symmetry, the number of inequivalent atoms is the same as total number of atoms, which is 2 in this case.

The lines following the third line contain information for each of the inequivalent atoms. 
The first three numbers are the cartesian positions in atomic units, its atomic number, and 
string ALL. In this example, we have placed one hydrogen atom at (0,0,Z) and the second one at (0,0,-Z). 
You can put the atoms anywhere. Atomic positions should be given in atomic units, Bohr. 
Following the xyz coordinates is the atomic number. The example listed is for hydrogen 
whose atomic number is 1. The string ALL signifies that the calculations are to be performed
at the all-electron level. It is also possible to use pseudopotentials. Only the BHS pseudopotentials 
are hardwired into the code. It is also possible to use user-supplied (numerical) pseudopotentials also, but 
requires more work and is not recommended for beginners.

The last line in the example has two fields. The first field is 0.0 which means perform the calculation 
for the neutral molecule. If it is 1 then the calculations will be performed for singly charged 
cation of the system. The next field, which is 0 in this example, corresponds to the number of unpaired 
electrons in the system. There are no unpaired electrons in this example.
Lines after Charge and Moment line are ignored.

A file called **FRMORB** is also required, which contains the FOD positions. An example FRMORB file for H2 is shown below.

.. literalinclude:: input_data/FRMORB.H2

The first line contains two fields. The first is the number of spin up FODs (N) and the second is the number of spin down FODs (M).
For H2, we only have one electron in each spin channel. The up FOD coordinates (x,y,z) are the following N lines. 
After that is the coordinates (x,y,z) of the M spin down FODs

To avoid optimizing atomic geometries, change the CALCTYPE field in NRLMOL_INPUT.DAT from LBFGS to SCF-ONLY. This is recommended for FLOSIC
calculations when the FODs are being optimized.

Now, copy the example input files called CLUSTER and FRMORB into an empty directory. Run the calculation for the H2 molecule 
using the following command at the prompt.

    $ **PATH_TO_FLOSIC/nrlmol_exe > print**
 
Now, browse through the file SUMMARY and look at the energies printed at each iteration of the SCF cycle. You should see that the minimum
total energy is reached at self-consistency.
Also, look at the EVALUES file in which Kohn-Sham eigenvalues and occupation numbers are printed. 

The FOD forces are displayed in the records file, which has the same format as FRMORB, followed by the FOD forces in the same order.

The fande.out file contains the iteration, total DFT+SIC energy, square root of the sum of the squares of the FOD forces, and the max FOD force.
When optimizing FODs, this is a good file to check for the convergence of FOD forces.

After completing a self-consistent calculation, the FOD forces are used in a gradient optimization scheme to update the FOD positions.  
These are written into the FRMORB file.  Re-running the code will cause another self-consistent calculation to be performed, using the 
updated FOD positions.  A new total energy and new FOD forces will be calculated, and the FOD positions will again be updated.  
Repeating this process will result in the optimization of the FOD positions.  Convergence can be gauged by the size by the largest FOD 
force.  When this drops below a chosen convergence criterion, the FODs are optimized.

To further optimize FODs, repeatedly run the code until the calculation is optimized to your criterion. 
A simple iterative loop can help with this process.

For the example of H2, there is only one FOD of each spin. Placing the FODs at any position in space
for such a case will give the same energy and the force on the FOD will therefore be zero. 
