
Tutorial 3  FODs optimization: Water molecule 
======================================================


This tutorial explains how to do a FODs optimization taking the example of the water molecule. It is not recommended to do both, molecular and FOD optimization at the same time because the FOD forces are very sensitive to the FOD positions relative to the nuclei. Even if one is not optimizing the structure, it is recommended to run a normal DFT calculation first to get the wavefunction. To do this, we start from the usual CLUSTER file:

.. literalinclude:: input_data/CLUSTER-H2O
 
In the NRLMOL_INPUT.DAT file we change CALCTYPEV from 'LBFGS' to 'SCF-ONLY' to switch off the molecular optimization. We also turn on the unrestricted calculation setting SPNPOLV = 'Y'. Then we run NRLMOL in a new directory with only CLUSTER and NRLMOL_INPUT.DAT files:

 $ **./nrlmol_exe > print.DFT**

All the normal NRLMOL outputs are generated. If the calculation finished correctly, we should have the following RUNS file

.. literalinclude:: input_data/RUNS-H2O

The second number in the first line may be different if a molecular optimization was carried out. It is important to check that we have a couple of fours in the second line. This tells NRLMOL to use the wavefunction stored in WFOUT for the next calculation.

Now, we have to include the FOD positions. Here, we can use the Monte Cartlo FOD generator **fodMC**. For that, we copy XMOL.xyz into a file named **system** and edit the second and last lines as shown

.. literalinclude:: input_data/system-H2O

It might have an empty line at the end. The fodMC code and documentation can be found `here <https://github.com/pyflosic/fodMC>`_. When fodMC is executed 3 files are generated: **CLUSTER**, **FRMORB** and **Nuc_FOD.xyz**. Thus, it will overwrite our **CLUSTER** file if executed in the same directory. In our case, it does not matter because whenever the **SYMBOL** file is present **CLUSTER** is ignored. **FRMORB** contains the FODs in Bohrs for the unrestricted calculation (first the up, then the down). You should get something like this:

.. literalinclude:: input_data/FRMORB-H2O

If you do not have fodMC, you can copy-paste the previous **FRMORB**. It is important to always check how the FODs are distributed. For that, you can visualize **Nuc_FOD.xyz** with the software of your choice. The spin up FODs have the label X and the down He, so be careful if the He atom is included in your system. On the other hand, **FRMORB** is a deprecated way to give the FODs. It is recommended to rename it **FRMIDT** and include the **FRMGRP** with the group symmetry transformation matrices of the FODs. Here, we just copy the identity matrix in **GRPMAT** into **FRMGRP** and run NRLMOL.

 $ **mv FRMORB FRMIDT**
 $ **cp GRPMAT FRMGRP**
 $ **./nrlmol_exe > print.001**

If everything goes well, we get now all the FLOSIC output files. Check the **SUMMARY** file. It should look like this:

.. literalinclude:: input_data/SUMMARY-H2O

The first block is for the normal DFT calculation with the second and fifth column exactly the same (no SIC). The second block is for the FLOSIC run. In **print.001** search for the word ITERATION 

.. literalinclude:: input_data/print1-H2O

There it states that the wave function is read from WFOUT and gives the occupied and total number of orbitals. After giving the occupancies, it calculates the Lowdin overlap eigenvalues

.. literalinclude:: input_data/print2-H2O

It is good when these values remain close to one. When one or more of these eigenvalues are smaller than 1E-08, the calculation stops with a message of bad FOD positions. At the end of the SCF cycle we get the following summary of energy contributions. Some of them are in the **SUMMARY** file too.

.. literalinclude:: input_data/print3-H2O

Once the total energy is converged, the FOD forces are calculated and FOD positions are updated in **FRMIDT** (and/or in **FRMORB**) using the chosen optimization method. Default is scaled LBFGS, but it sometimes gets stuck or fails to obtain the next step. In those cases, we may switch off this variable in **NRLMOL_INPUT.DAT** SCALEDLBFGSV = 'N' to use the conjuged gradient for the FOD optimization. As the FODs are already updated and we also have the wavefunciton and the **RUNS** file, we just run again NRLMOL in the same directory to do the SCF cycle with the new FODs.

 $ **./nrlmol_exe > print.002**

We can sucessively do this or use a script similar to that in the previous tutorial. After doing 5 steps of FOD optimization we can see in **fande.out** how the energy is decreasing and converging and the forces diminishing (not at every step).

.. literalinclude:: input_data/fande-H2O

All the used FODs and obtained forces and corrected total energy can be seen in **records** file.

